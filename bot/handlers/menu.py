from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    WebAppInfo,
    CallbackQuery,
)
from urllib.parse import urlparse
import ipaddress

router = Router()

def _is_public_host(host: str) -> bool:
    if not host:
        return False
    h = host.lower()
    # –Ø–≤–Ω–æ –∑–∞–ø—Ä–µ—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ö–æ—Å—Ç—ã
    if h == "localhost" or h.endswith(".local"):
        return False
    # IP –∞–¥—Ä–µ—Å?
    try:
        ip = ipaddress.ip_address(h)
        # –¢–æ–ª—å–∫–æ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ IP —Ä–∞–∑—Ä–µ—à–∏–º –∫–∞–∫ "–ø—É–±–ª–∏—á–Ω—ã–µ"
        return ip.is_global
    except ValueError:
        # –ù–µ IP ‚Äî –ø–æ—Ö–æ–∂–µ –Ω–∞ –¥–æ–º–µ–Ω–Ω–æ–µ –∏–º—è. –°—á–∏—Ç–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–º.
        return True

def _is_https_public(url: str) -> bool:
    try:
        p = urlparse(url)
    except Exception:
        return False
    return p.scheme == "https" and _is_public_host(p.hostname)

def menu_kb(url: str) -> InlineKeyboardMarkup:
    rows = []
    # –ö–Ω–æ–ø–∫–∏ —Å URL –¥–æ–±–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ HTTPS
    if _is_https_public(url):
        rows.append([InlineKeyboardButton(text="üîó –û—Ç–∫—Ä—ã—Ç—å –∫–∞–±–∏–Ω–µ—Ç (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ)", web_app=WebAppInfo(url=url))])
        rows.append([InlineKeyboardButton(text="üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", url=url)])
    rows.append([InlineKeyboardButton(text="üß≠ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="wizard:start")])
    return InlineKeyboardMarkup(inline_keyboard=rows)

def _compose_menu_text(base: str, url: str) -> str:
    if _is_https_public(url):
        return base
    # –§–æ–ª–ª–±–µ–∫ –¥–ª—è –ª–æ–∫–∞–ª–∫–∏/HTTP: –¥–∞—ë–º –∫–æ–ø–∏—Ä—É–µ–º—É—é —Å—Å—ã–ª–∫—É —Ç–µ–∫—Å—Ç–æ–º
    return (
        base
        + "\n\n‚ö†Ô∏è Telegram –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö/–Ω–µ-HTTPS —Å—Å—ã–ª–æ–∫."
          "\n–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
          f"\n{url}"
    )

@router.message(CommandStart())
async def cmd_start(message: Message, webapp_url: str):
    await message.answer(
        _compose_menu_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", webapp_url),
        reply_markup=menu_kb(webapp_url),
    )

@router.message(Command("menu"))
async def cmd_menu(message: Message, webapp_url: str):
    await message.answer(
        _compose_menu_text("–ú–µ–Ω—é:", webapp_url),
        reply_markup=menu_kb(webapp_url),
    )

@router.callback_query(F.data == "menu")
async def cb_menu(cb: CallbackQuery, webapp_url: str):
    await cb.message.edit_text(
        _compose_menu_text("–ú–µ–Ω—é:", webapp_url),
        reply_markup=menu_kb(webapp_url),
    )
    await cb.answer()
